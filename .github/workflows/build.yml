name: Build and Release Executables

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install pyinstaller pandas numpy openpyxl
      - name: Build executable
        run: pyinstaller --onefile --windowed --hidden-import openpyxl kbart_gui.py
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-executable
          path: dist/

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install pyinstaller pandas numpy openpyxl
      - name: Build executable
        run: pyinstaller --onefile --hidden-import openpyxl kbart_gui.py
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-executable
          path: dist/

  release:
    runs-on: ubuntu-latest
    needs: [build_windows, build_linux]
    steps:
      - uses: actions/checkout@v3
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-executable
          path: ./windows
          
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-executable
          path: ./linux

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/your-exe-file.exe
          asset_name: "your-exe-file-windows.exe"
          asset_content_type: application/octet-stream

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux/your-exe-file
          asset_name: "your-exe-file-linux"
          asset_content_type: application/octet-stream
